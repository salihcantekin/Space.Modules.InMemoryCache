name: Validation Build

on:
  push:
    branches:
      - 'feature/*'
      - 'features/*'
  pull_request:
    branches:
      - dev
      - master

concurrency:
  group: validation-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      PROJECT: src/Space.Modules.InMemoryCache/Space.Modules.InMemoryCache.csproj
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 8.x
          cache: true
          cache-dependency-path: |
            **/*.csproj
            **/global.json

      - name: Restore
        run: |
          dotnet restore "$PROJECT"
          dotnet restore tests/InMemoryCache.Tests/InMemoryCache.Tests.csproj

      - name: Code Style Check
        shell: bash
        run: |
          set -euo pipefail
          mapfile -t projects < <(git ls-files "*.csproj")
          if [ ${#projects[@]} -eq 0 ]; then
            echo "No projects found to format. Skipping."; exit 0
          fi
          for p in "${projects[@]}"; do
            echo "Running dotnet format on: $p"
            dotnet format "$p" --verify-no-changes
          done

      - name: Build (Release - Library)
        run: dotnet build "$PROJECT" -c Release --no-restore -p:ContinuousIntegrationBuild=true

      - name: Build (Release - Tests)
        run: dotnet build tests/InMemoryCache.Tests/InMemoryCache.Tests.csproj -c Release --no-restore

      - name: Test (Release with coverage)
        run: >
          dotnet test tests/InMemoryCache.Tests/InMemoryCache.Tests.csproj
          -c Release --no-build --logger trx
          --collect:"XPlat Code Coverage"

      - name: Dependency Vulnerability Scan
        run: dotnet list "$PROJECT" package --vulnerable --include-transitive || true

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: validation-test-results
          path: tests/**/TestResults/*.trx
          retention-days: 5

      - name: Upload Coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: validation-coverage
          path: '**/coverage.cobertura.xml'
          retention-days: 5
